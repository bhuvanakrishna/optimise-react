import React, { useEffect } from 'react';
<% if (nextName && pattern !== 'lazy-loading') { %>import <%= nextName %> from './<%= nextName %>';<% } %>
<% if (uiComponent) { %>import <%= uiComponent %> from '../../components/<%= uiComponent %>';<% } %>
<% if (nextName && pattern === 'lazy-loading' && name === 'Parent') { %>
const Lazy<%= nextName %> = React.lazy(() => import('./<%= nextName %>'));
<% } %>

const <%= name %> = (props: any) => {
  <% if (pattern === 'too-many-effects') { %>
  useEffect(() => {}, []);
  useEffect(() => {}, []);
  useEffect(() => {}, []);
  <% } %>
  <% if (pattern === 'no-deps-effect') { %>
  useEffect(() => {
    console.log('effect runs every render');
  });
  <% } %>
  <% if (pattern === 'missing-useMemo') { %>
  const expensive = Array.from({ length: 1000 }).reduce((a, _, i) => a + i, 0);
  <% } %>
  return (
    <div>
      <h4><%= name %></h4>
      <% if (uiComponent) { %>
      <<%= uiComponent %> />
      <% } %>
      <% if (nextName) { %>
        <% if (pattern === 'lazy-loading' && name === 'Parent') { %>
        <React.Suspense fallback={null}>
          <Lazy<%= nextName %> user={props.user<%= pattern === 'unstable-props' ? ', data: { value: Math.random() }' : '' %>} />
        </React.Suspense>
        <% } else { %>
        <<%= nextName %> user={props.user<%= pattern === 'unstable-props' ? ', data: { value: Math.random() }' : '' %>} />
        <% } %>
      <% } else { %>
        <div>User: {props.user}</div>
        <% if (pattern === 'inline-handler') { %>
        <button onClick={() => console.log('clicked')}>Click</button>
        <% } %>
      <% } %>
    </div>
  );
};

export default <%= name %>;
